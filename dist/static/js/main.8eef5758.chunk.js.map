{"version":3,"sources":["component/auth/SignIn.js","store/actions/authActions.js","component/auth/SignUp.js","component/projects/ProjectSumary.js","component/projects/ProjectList.js","component/dashboard/Notifications.js","component/dashboard/Dashboard.js","component/layouts/SignedInLinks.js","component/layouts/SignedOutLinks.js","component/layouts/Navbar.js","store/actions/projectActions.js","component/projects/CreateProject.js","component/projects/ProjectDetails.js","App.js","config/fbConfig.js","serviceWorker.js","store/reducers/authReducer.js","store/reducers/projectReducer.js","store/reducers/rootReducer.js","index.js"],"names":["SignIn","state","email","password","handleChange","e","setState","target","id","value","handleSubmit","preventDefault","props","signIn","this","authError","auth","uid","to","className","onSubmit","htmlFor","type","onChange","Component","connect","firebase","dispatch","creds","credentials","getState","getFirebase","signInWithEmailAndPassword","then","catch","SignUp","firstName","lastName","signUp","newUser","getFirestore","firestore","createUserWithEmailAndPassword","resp","collection","doc","user","set","initials","ProjectSumary","project","title","authorFirstName","authorLastName","moment","createdAt","toDate","calendar","ProjectList","projects","map","key","Notifications","notifications","notification","content","time","fromNow","Dashboard","compose","ordered","firestoreConnect","orderBy","limit","signOut","href","onClick","profile","SignedOutLinks","links","createProject","authorId","add","Date","CreateProject","history","push","ownProps","match","params","data","App","exact","path","component","ProjectDetails","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","isLocalhost","Boolean","window","location","hostname","register","config","navigator","URL","process","origin","addEventListener","swUrl","fetch","response","contentType","headers","get","status","indexOf","serviceWorker","ready","registration","unregister","reload","registerValidSW","console","log","checkValidServiceWorker","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","error","initState","authReducer","action","message","projectReducer","rootReducer","combineReducers","firestoreReducer","firebaseReducer","store","createStore","applyMiddleware","thunk","withExtraArgument","reactReduxFirebase","fbConfig","useFirestoreForProfile","userProfile","attachAuthIsReady","reduxFirestore","firebaseAuthIsReady","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.8eef5758.chunk.js","sourcesContent":["import React, { Component } from 'react'\r\nimport {connect} from 'react-redux'\r\nimport {signIn} from '../../store/actions/authActions'\r\nimport { Redirect } from 'react-router-dom';\r\nclass SignIn extends Component {\r\n    state={\r\n        email: '',\r\n        password: ''\r\n\r\n    }\r\n    handleChange = e =>{\r\n        this.setState({\r\n            [e.target.id]: e.target.value\r\n        })\r\n    }\r\n    handleSubmit = e =>{\r\n        e.preventDefault();\r\n        this.props.signIn(this.state)\r\n    }\r\n    render() {\r\n        const {authError, auth}= this.props;\r\n        if(auth.uid) return <Redirect to='/'/>\r\n        return (\r\n            <div className= \"container\">\r\n                <form onSubmit={this.handleSubmit} className=\"white\">\r\n                    <h5 className=\"grey-text text-darken-3\">Sign In</h5>\r\n                    <div className=\"input-field\">\r\n                        <label htmlFor=\"email\">Email</label>\r\n                        <input type=\"email\" id=\"email\" onChange={this.handleChange}/>\r\n                    </div>\r\n                    <div className=\"input-field\">\r\n                        <label htmlFor=\"password\">Password</label>\r\n                        <input type=\"password\" id=\"password\" onChange={this.handleChange}/>\r\n                    </div>\r\n                    <div className=\"input-field\">\r\n                        <button className=\"btn pink lighten-1 z-depth-0\">Login</button>\r\n                        <div className=\"red-text center\">\r\n                            { authError ? <p>{authError}</p> : null }\r\n                        </div>\r\n                    </div>\r\n                </form>\r\n            </div>\r\n        )\r\n    }\r\n}\r\nconst mapStateToProps=state =>{\r\n    return{\r\n        authError: state.auth.authError,\r\n        auth: state.firebase.auth\r\n    }\r\n}\r\nconst mapDispatchToProps= dispatch =>{\r\nreturn{\r\n     signIn: creds=> dispatch(signIn(creds))\r\n}\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(SignIn)\r\n","export const signIn = credentials=>{\r\n    return (dispatch , getState, {getFirebase})=>{\r\n        const firebase = getFirebase();\r\n\r\n        firebase.auth().signInWithEmailAndPassword(\r\n            credentials.email,\r\n            credentials.password\r\n        )\r\n        .then(()=> dispatch({type:'LOGIN_SUCCESS'}))\r\n        .catch(e=>dispatch({type:'LOGIN_ERROR', e}));\r\n    }\r\n}\r\n\r\nexport const signOut = ()=>{\r\n    return (dispatch , getState, {getFirebase})=>{\r\n        const firebase = getFirebase();\r\n\r\n        firebase.auth().signOut().then(()=>{\r\n            dispatch({type:'SIGNOUT_SUCCESS'})\r\n        });\r\n    }\r\n}\r\n\r\n\r\nexport const signUp = newUser=>{\r\n    return (dispatch , getState, {getFirebase ,getFirestore})=>{\r\n        const firebase = getFirebase();\r\n        const firestore = getFirestore();\r\n\r\n        firebase.auth().createUserWithEmailAndPassword(\r\n            newUser.email,\r\n            newUser.password\r\n        ).then((resp)=>{\r\n            firestore.collection('users').doc(resp.user.uid).set({\r\n                firstName: newUser.firstName,\r\n                lastName: newUser.lastName,\r\n                initials: newUser.firstName[0] + newUser.lastName[0]\r\n            })\r\n        }).then(()=>{\r\n            dispatch({type:'SIGNUP_SUCCESS'})\r\n        }).catch(e=>{\r\n            dispatch({type:'SIGNUP_ERROR', e})\r\n        });\r\n    }  \r\n}","import React, { Component } from 'react'\r\nimport { Redirect } from 'react-router-dom';\r\nimport {connect} from 'react-redux'\r\nimport { signUp} from '../../store/actions/authActions'\r\n\r\nclass SignUp extends Component {\r\n    state={\r\n        email: '',\r\n        password: '',\r\n        firstName:'',\r\n        lastName: ''\r\n\r\n    }\r\n    handleChange = e =>{\r\n        this.setState({\r\n            [e.target.id]: e.target.value\r\n        })\r\n    }\r\n    handleSubmit = e =>{\r\n        e.preventDefault();\r\n        this.props.signUp(this.state)\r\n    }\r\n    render() {\r\n        const {auth, authError}= this.props;\r\n        if(auth.uid) return <Redirect to='/'/>\r\n        return (\r\n            <div className= \"container\">\r\n                <form onSubmit={this.handleSubmit} className=\"white\">\r\n                    <h5 className=\"grey-text text-darken-3\">Sign Up</h5>\r\n                    <div className=\"input-field\">\r\n                        <label htmlFor=\"email\">Email</label>\r\n                        <input type=\"email\" id=\"email\" onChange={this.handleChange}/>\r\n                    </div>\r\n                    <div className=\"input-field\">\r\n                        <label htmlFor=\"password\">Password</label>\r\n                        <input type=\"password\" id=\"password\" onChange={this.handleChange}/>\r\n                    </div>\r\n                    <div className=\"input-field\">\r\n                        <label htmlFor=\"firstName\">First Name</label>\r\n                        <input type=\"text\" id=\"firstName\" onChange={this.handleChange}/>\r\n                    </div>\r\n                    <div className=\"input-field\">\r\n                        <label htmlFor=\"lastName\">Last Name</label>\r\n                        <input type=\"text\" id=\"lastName\" onChange={this.handleChange}/>\r\n                    </div>\r\n                    <div className=\"input-field\">\r\n                        <button className=\"btn pink lighten-1 z-depth-0\">Sign Up</button>\r\n                        <div className=\"red-text center\">\r\n                            { authError ? <p>{authError}</p> : null }\r\n                        </div>\r\n                    </div>\r\n                </form>\r\n            </div>\r\n        )\r\n    }\r\n}\r\nconst mapStateToProps = state =>{\r\n    return{\r\n        auth: state.firebase.auth,\r\n        authError: state.auth.authError\r\n    }\r\n}\r\nconst mapDispatchToProps = dispatch=>{\r\n    return{\r\n        signUp: newUser=> dispatch(signUp(newUser))\r\n    }\r\n}\r\nexport default connect(mapStateToProps, mapDispatchToProps)(SignUp)\r\n","import React from 'react'\r\nimport moment from 'moment'\r\n\r\nconst ProjectSumary = ({project})=>{\r\n    return(\r\n        <div className=\"card z-depth-0 project-summary\">\r\n            <div className=\"card-content grey-text text-darken-3\">\r\n            <span className=\"card-title\">{project.title}</span>\r\n            <p> Posted by {project.authorFirstName} {project.authorLastName}</p>\r\n            <p className=\"text-grey\">{moment(project.createdAt.toDate()).calendar()}</p>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ProjectSumary","import React from 'react'\r\nimport ProjectSumary from './ProjectSumary'\r\nimport {Link} from 'react-router-dom'\r\n\r\nconst ProjectList = ({projects})=>{\r\n    return(\r\n        <div className=\"project-list section\">\r\n           { projects && projects.map(project=>{\r\n               return(\r\n                   <Link to={'/project/'+ project.id} key={project.id}>\r\n                        <ProjectSumary project = {project} />\r\n                   </Link>\r\n                   \r\n               )\r\n           })}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ProjectList","import React from 'react'\r\nimport moment from 'moment'\r\n\r\nconst Notifications = (props)=>{\r\n    const {notifications}= props;\r\n    return (\r\n        <div className='section'>\r\n            <div className=\"card z-depth-0\">\r\n                <div className='card-content'>\r\n                    <span className=\"card-title\">Notifications</span>\r\n                    <ul className='notifications'>\r\n                       {notifications && notifications.map(notification=>{\r\n                           return (\r\n                               <li key={notification.id}>\r\n                                   <span className='pink-text'>{notification.user}:</span>\r\n                                   <span> {notification.content}</span>\r\n                                   <div className='grey-text note-date'>\r\n                                        {moment(notification.time.toDate()).fromNow()}\r\n                                   </div>\r\n                               </li>\r\n                           )\r\n                       })}\r\n                    </ul>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Notifications","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport ProjectList from '../projects/ProjectList';\r\nimport Notifications from './Notifications';\r\nimport {firestoreConnect} from 'react-redux-firebase'\r\nimport {compose} from 'redux'\r\nimport {Redirect} from 'react-router-dom'\r\n\r\n\r\nclass Dashboard extends Component {\r\n    \r\n    render(){\r\n        const { projects, auth, notifications } = this.props;\r\n        if(!auth.uid) return <Redirect to='/signin'/>\r\n        return(\r\n            <div className=\"dashboard container\">\r\n                <div className=\"row\">\r\n                    <div className=\"col s12 m6\">\r\n                        <ProjectList projects={projects}/>\r\n                    </div>\r\n                    <div className=\"col s12 m5 offset-m1\">\r\n                        <Notifications notifications={notifications}/>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\nconst mapStateToProp=(state)=>{\r\n    return {\r\n        projects: state.firestore.ordered.projects,\r\n        auth: state.firebase.auth,\r\n        notifications: state.firestore.ordered.notifications\r\n    }\r\n}\r\n\r\nexport default compose(\r\n    connect(mapStateToProp),\r\n    firestoreConnect([\r\n    {collection: 'projects', orderBy: ['createdAt','desc']},\r\n    {collection: 'notifications', limit: 3, orderBy: ['time','desc']}\r\n    ])\r\n)(Dashboard);","import React from 'react'\r\nimport {NavLink} from 'react-router-dom'\r\nimport {connect} from 'react-redux'\r\nimport {signOut} from '../../store/actions/authActions'\r\n\r\nconst SignedInLinks = (props) =>{\r\n\r\n    return(\r\n      <ul className=\"right\">\r\n            <li><NavLink to='/create'>New Project</NavLink></li>\r\n            <li><a href='/signin' onClick={props.signOut}>Log Out</a></li>\r\n            <li><NavLink to='/' className=\"btn btn-floating pink lighten-1\">\r\n              {props.profile.initials}\r\n            </NavLink></li>\r\n      </ul>\r\n    )\r\n}\r\nconst mapDispatchToProps= dispatch=>{\r\n  return{\r\n    signOut: ()=> dispatch(signOut())\r\n  }\r\n}\r\nexport default connect(null, mapDispatchToProps)(SignedInLinks)","import React from 'react'\r\nimport {NavLink} from 'react-router-dom'\r\n\r\nconst SignedOutLinks = () =>{\r\n\r\n    return(\r\n      <ul className=\"right\">\r\n            <li><NavLink to='/signup'>Sign Up</NavLink></li>\r\n            <li><NavLink to='/signin'>Login</NavLink></li>\r\n           \r\n      </ul>\r\n    )\r\n}\r\n\r\nexport default SignedOutLinks","import React from 'react'\r\nimport {Link} from 'react-router-dom'\r\nimport SignedInLinks from './SignedInLinks'\r\nimport SignedOutLinks from './SignedOutLinks'\r\nimport {connect} from 'react-redux'\r\nconst Navbar = props =>{\r\n    const {auth, profile}= props;\r\n    const links = auth.uid ? <SignedInLinks profile={profile}/> :  <SignedOutLinks/>;\r\n    return(\r\n        <nav className=' nav-wrapper grey darken-3'>\r\n            <div className=\"container\">\r\n                <Link to='/' className=\"brand-logo\"> Saurabh's Plan </Link>\r\n               {links}\r\n            </div>\r\n        </nav>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = state =>{\r\n    return{\r\n        auth: state.firebase.auth,\r\n        profile: state.firebase.profile\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps)(Navbar)","export const createProject = project => {\r\n    return (dispatch, getState, { getFirebase , getFirestore })=>  {\r\n        const firestore = getFirestore();\r\n        const profile = getState().firebase.profile;\r\n        const authorId = getState().firebase.auth.uid;\r\n        firestore.collection('projects').add({\r\n            ...project,\r\n            authorFirstName:profile.firstName,\r\n            authorLastName:profile.lastName,\r\n            authorId: authorId,\r\n            createdAt: new Date()\r\n        }).then(()=>{\r\n            dispatch({ type: 'CREATE_PROJECT', project});\r\n        }).catch(e=>  dispatch({ type: 'CREATE_PROJECT_ERROR', e}));\r\n           \r\n    }\r\n};","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Redirect } from 'react-router-dom';\r\nimport { createProject } from '../../store/actions/projectActions';\r\n\r\nclass CreateProject extends Component {\r\n    state={\r\n        title: '',\r\n        content: ''\r\n\r\n    }\r\n    handleChange = e =>{\r\n        this.setState({\r\n            [e.target.id]: e.target.value\r\n        })\r\n    }\r\n    handleSubmit = e =>{\r\n        e.preventDefault();\r\n        this.props.createProject(this.state);\r\n        this.props.history.push('/')\r\n    }\r\n    render() {\r\n        const {auth} = this.props;\r\n        if(!auth.uid) return <Redirect to='/signin'/>\r\n        return (\r\n            <div className= \"container\">\r\n                <form onSubmit={this.handleSubmit} className=\"white\">\r\n                    <h5 className=\"grey-text text-darken-3\">Create New Project</h5>\r\n                    <div className=\"input-field\">\r\n                        <label htmlFor=\"title\">Title</label>\r\n                        <input type=\"text\" id=\"title\" onChange={this.handleChange}/>\r\n                    </div>\r\n                    <div className=\"input-field\">\r\n                        <label htmlFor=\"content\">Project Content</label>\r\n                        <textarea id=\"content\" className=\"materialize-textarea\" onChange={this.handleChange}/>\r\n                    </div>\r\n                    <div className=\"input-field\">\r\n                        <button className=\"btn pink lighten-1 z-depth-0\">Create</button>\r\n                    </div>\r\n                </form>\r\n            </div>\r\n        )\r\n    }\r\n}\r\nconst mapStateToProps= state=>{\r\n    return{\r\n        auth: state.firebase.auth\r\n    }\r\n}\r\nconst mapDispatchtoProps= (dispatch)=>{\r\nreturn {\r\n    createProject: project => dispatch(createProject(project))\r\n}\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchtoProps)(CreateProject)","import React from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { firestoreConnect } from 'react-redux-firebase'\r\nimport { compose } from 'redux'\r\nimport { Redirect } from 'react-router-dom';\r\nimport moment from 'moment'\r\n\r\nconst ProjectDetails = (props) => {\r\n  const { project, auth } = props;\r\n  if(!auth.uid) return <Redirect to='/signin'/>\r\n  if (project) {\r\n    return (\r\n      <div className=\"container section project-details\">\r\n        <div className=\"card z-depth-0\">\r\n          <div className=\"card-content\">\r\n            <span className=\"card-title\">{project.title}</span>\r\n            <p>{project.content}</p>\r\n          </div>\r\n          <div className=\"card-action grey lighten-4 grey-text\">\r\n            <div>Posted by {project.authorFirstName} {project.authorLastName}</div>\r\n            <div>{moment(project.createdAt.toDate()).calendar()}</div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    )\r\n  } else {\r\n    return (\r\n      <div className=\"container center\">\r\n        <p>Loading project...</p>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state, ownProps) => {\r\n  const id = ownProps.match.params.id;\r\n  const projects = state.firestore.data.projects;\r\n  const project = projects ? projects[id] : null\r\n  return {\r\n    project,\r\n    auth: state.firebase.auth\r\n  }\r\n}\r\n\r\nexport default compose(\r\n  connect(mapStateToProps),\r\n  firestoreConnect([{\r\n    collection: 'projects'\r\n  }])\r\n)(ProjectDetails)","import React from 'react';\nimport { BrowserRouter, Route, Switch } from 'react-router-dom';\nimport SignIn from './component/auth/SignIn';\nimport SignUp from './component/auth/SignUp';\nimport Dashboard from './component/dashboard/Dashboard';\nimport Navbar from './component/layouts/Navbar';\nimport CreateProject from './component/projects/CreateProject';\nimport ProjectDetails from './component/projects/ProjectDetails';\n\n\nfunction App() {\n  return (\n    <BrowserRouter>\n      <div className=\"App\">\n        <Navbar />\n        <Switch>\n          <Route exact path='/' component={Dashboard}/>\n          <Route path='/project/:id'  component={ProjectDetails}/> \n          <Route path='/signin' component={SignIn}/> \n          <Route path='/signup' component={SignUp}/>\n          <Route path='/create' component={CreateProject}/>\n        </Switch>\n      </div>\n    </BrowserRouter>  \n  );\n}\n\nexport default App;\n","import firebase from 'firebase/app'\r\nimport 'firebase/firestore'\r\nimport 'firebase/auth'\r\n\r\n\r\n\r\nvar firebaseConfig = {\r\n    apiKey: \"AIzaSyBA_xuiaxh7ECEy3St-8xlwHjnUPTxeBoU\",\r\n    authDomain: \"saurabhs-plan.firebaseapp.com\",\r\n    databaseURL: \"https://saurabhs-plan.firebaseio.com\",\r\n    projectId: \"saurabhs-plan\",\r\n    storageBucket: \"\",\r\n    messagingSenderId: \"778352009021\",\r\n    appId: \"1:778352009021:web:9d150ba78d8d67a8\"\r\n  };\r\n  // Initialize Firebase\r\n  firebase.initializeApp(firebaseConfig);\r\n  firebase.firestore();\r\n\r\n  export default firebase;\r\n//  security rules for firebase\r\n//   rules_version = '2';\r\n// service cloud.firestore {\r\n//   match /databases/{database}/documents {\r\n//     match /projects/{project} {\r\n//       allow read, write: if request.auth.uid != null\r\n//     }\r\n//     match /users/{userId}{\r\n//     allow create\r\n//     allow read: if request.auth.uid != null\r\n//     allow write: if request.auth.uid == userId\r\n//     }\r\n//   }\r\n// }","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","const initState = {\r\n    authError: null\r\n}\r\n\r\nconst authReducer = (state = initState, action)=>{\r\n    switch(action.type){\r\n        case 'LOGIN_ERROR':\r\n            console.log('Login failed...');\r\n            return{\r\n                ...state,\r\n                authError: 'Login Failed...'\r\n            }\r\n        case 'LOGIN_SUCCESS':\r\n            console.log('Login success...');\r\n            return{\r\n                ...state,\r\n                authError: null\r\n            }\r\n        case 'SIGNOUT_SUCCESS':\r\n            console.log('Sign Out success...');\r\n            return state;\r\n        case 'SIGNUP_SUCCESS':\r\n            console.log('Sign Up success...'); \r\n            return{\r\n                ...state,\r\n                authError: null\r\n            }\r\n         case 'SIGNUP_ERROR':\r\n            console.log('Signup failed...');\r\n            return{\r\n                ...state,\r\n                authError: action.e.message\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\nexport default authReducer;","const initState = {\r\n  projects: [\r\n              {id: '1', title:'help me find mango', content:'laa laa la lala laa laa la lala'},\r\n              {id: '2', title:'collect all the stars', content:'laa laa la lala laa laa la lala'},\r\n              {id: '3', title:'play pool when in Mumbai', content:'laa laa la lala laa laa la lala'}\r\n  ]\r\n}\r\n\r\nconst projectReducer = (state = initState, action)=>{\r\n  switch(action.type){\r\n    case 'CREATE_PROJECT':\r\n      console.log('created project', action.project);\r\n      return state;\r\n    case 'CREATE_PROJECT_ERROR':\r\n      console.log('create project error', action.e);\r\n      return state;\r\n    default:\r\n      return state;\r\n  } \r\n}\r\nexport default projectReducer;","import { firebaseReducer } from 'react-redux-firebase';\r\nimport { combineReducers } from 'redux';\r\nimport { firestoreReducer } from 'redux-firestore';\r\nimport authReducer from './authReducer';\r\nimport projectReducer from './projectReducer';\r\n\r\nconst rootReducer = combineReducers({\r\n    auth: authReducer,\r\n    project: projectReducer,\r\n    firestore: firestoreReducer,\r\n    firebase: firebaseReducer\r\n});\r\n\r\nexport default rootReducer;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { getFirebase, reactReduxFirebase } from 'react-redux-firebase';\nimport { applyMiddleware, compose, createStore } from 'redux';\nimport { getFirestore, reduxFirestore } from 'redux-firestore';\nimport thunk from 'redux-thunk';\nimport App from './App';\nimport fbConfig from './config/fbConfig';\nimport './index.css';\nimport * as serviceWorker from './serviceWorker';\nimport rootReducer from './store/reducers/rootReducer';\n\nconst store = createStore(rootReducer, \n    compose(\n      applyMiddleware(thunk.withExtraArgument({ getFirebase, getFirestore })),\n      reactReduxFirebase(fbConfig, {useFirestoreForProfile: true, userProfile:'users',attachAuthIsReady:true}),\n      reduxFirestore(fbConfig)\n    )\n);\n\nstore.firebaseAuthIsReady.then(()=>{\n  ReactDOM.render(<Provider store={store}><App /></Provider>, document.getElementById('root'));\n  serviceWorker.register();\n})\n\n\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n\n"],"sourceRoot":""}